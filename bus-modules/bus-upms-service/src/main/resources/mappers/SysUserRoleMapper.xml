<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.github.bus.upms.dao.SysUserRoleMapper">
    <resultMap id="BaseResultMap" type="com.github.bus.upms.model.SysUserRole">
        <constructor>
            <idArg column="id" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="user_id" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="role_id" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="create_user_id" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="update_user_id" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="flag" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        </constructor>
    </resultMap>

    <resultMap id="UserRoleListMap" type="com.github.bus.upms.pojo.UserRolePojo">
        <result property="userId" column="user_id"/>
        <result property="userCode" column="user_code"/>
        <result property="userName" column="user_name"/>
        <result property="roleId" column="role_id"/>
        <result property="roleName" column="role_name"/>
        <result property="roleType" column="role_type"/>
    </resultMap>

    <sql id="Base_Column_List">
    id, user_id, role_id, create_time, update_time, create_user_id, update_user_id, flag
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from sys_user_role
        where id = #{id,jdbcType=VARCHAR}
    </select>

    <!-- 按条件组合搜索列表  -->
    <select id="queryUserRoleList" resultMap="UserRoleListMap">
        SELECT
        u.user_id,user_code,user_name,r.role_id,rig.role_name
        FROM sys_user u LEFT JOIN sys_user_role r ON u.user_id = r.user_id
        LEFT JOIN sys_role rig on r.role_id = rig.role_id
        <where>
            <if test="userId != null and userId != ''">
                and u.user_id = #{userId}
            </if>
        </where>
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from sys_user_role
    where id = #{id,jdbcType=VARCHAR}
  </delete>

    <delete id="deleteByUserId" parameterType="java.lang.String">
    delete from sys_user_role
    where user_id = #{userId,jdbcType=VARCHAR}
  </delete>

    <insert id="insert" parameterType="com.github.bus.upms.model.SysUserRole">
        <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
            select replace(uuid(),'-','')
        </selectKey>
        insert into sys_user_role (id, user_id, role_id,
        create_time, update_time, create_user_id,
        update_user_id, flag)
        values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR},
        #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=VARCHAR},
        #{updateUserId,jdbcType=VARCHAR}, #{flag,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.github.bus.upms.model.SysUserRole">
        <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
            select replace(uuid(),'-','')
        </selectKey>
        insert into sys_user_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="createUserId != null">
                create_user_id,
            </if>
            <if test="updateUserId != null">
                update_user_id,
            </if>
            <if test="flag != null">
                flag,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserId != null">
                #{createUserId,jdbcType=VARCHAR},
            </if>
            <if test="updateUserId != null">
                #{updateUserId,jdbcType=VARCHAR},
            </if>
            <if test="flag != null">
                #{flag,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.github.bus.upms.model.SysUserRole">
        update sys_user_role
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=VARCHAR},
            </if>
            <if test="roleId != null">
                role_id = #{roleId,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserId != null">
                create_user_id = #{createUserId,jdbcType=VARCHAR},
            </if>
            <if test="updateUserId != null">
                update_user_id = #{updateUserId,jdbcType=VARCHAR},
            </if>
            <if test="flag != null">
                flag = #{flag,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.github.bus.upms.model.SysUserRole">
    update sys_user_role
    set user_id = #{userId,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=VARCHAR},
      update_user_id = #{updateUserId,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>
