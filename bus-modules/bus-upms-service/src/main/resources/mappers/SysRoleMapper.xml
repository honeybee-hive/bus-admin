<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.github.bus.upms.dao.SysRoleMapper">
    <resultMap id="BaseResultMap" type="com.github.bus.upms.model.SysRole">
        <constructor>
            <idArg column="role_id" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="role_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="role_type" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="role_remark" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="create_user_id" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="update_user_id" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="flag" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
    role_id, role_name, role_type, role_remark, create_time, update_time, create_user_id, 
    update_user_id, flag
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from sys_role
        where role_id = #{roleId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from sys_role
    where role_id = #{roleId,jdbcType=VARCHAR}
  </delete>
    <insert id="insert" parameterType="com.github.bus.upms.model.SysRole">
        <selectKey keyProperty="roleId" order="BEFORE" resultType="java.lang.String">
            select replace(uuid(),'-','')
        </selectKey>
        insert into sys_role (role_id, role_name, role_type,
        role_remark, create_time, update_time,
        create_user_id, update_user_id, flag
        )
        values (#{roleId,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, #{roleType,jdbcType=VARCHAR},
        #{roleRemark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
        #{createUserId,jdbcType=VARCHAR}, #{updateUserId,jdbcType=VARCHAR}, #{flag,jdbcType=INTEGER}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.github.bus.upms.model.SysRole">
        <selectKey keyProperty="roleId" order="BEFORE" resultType="java.lang.String">
            select replace(uuid(),'-','')
        </selectKey>
        insert into sys_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                role_id,
            </if>
            <if test="roleName != null">
                role_name,
            </if>
            <if test="roleType != null">
                role_type,
            </if>
            <if test="roleRemark != null">
                role_remark,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="createUserId != null">
                create_user_id,
            </if>
            <if test="updateUserId != null">
                update_user_id,
            </if>
            <if test="flag != null">
                flag,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                #{roleId,jdbcType=VARCHAR},
            </if>
            <if test="roleName != null">
                #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleType != null">
                #{roleType,jdbcType=VARCHAR},
            </if>
            <if test="roleRemark != null">
                #{roleRemark,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserId != null">
                #{createUserId,jdbcType=VARCHAR},
            </if>
            <if test="updateUserId != null">
                #{updateUserId,jdbcType=VARCHAR},
            </if>
            <if test="flag != null">
                #{flag,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.github.bus.upms.model.SysRole">
        update sys_role
        <set>
            <if test="roleName != null">
                role_name = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleType != null">
                role_type = #{roleType,jdbcType=VARCHAR},
            </if>
            <if test="roleRemark != null">
                role_remark = #{roleRemark,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserId != null">
                create_user_id = #{createUserId,jdbcType=VARCHAR},
            </if>
            <if test="updateUserId != null">
                update_user_id = #{updateUserId,jdbcType=VARCHAR},
            </if>
            <if test="flag != null">
                flag = #{flag,jdbcType=INTEGER},
            </if>
        </set>
        where role_id = #{roleId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.github.bus.upms.model.SysRole">
    update sys_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      role_type = #{roleType,jdbcType=VARCHAR},
      role_remark = #{roleRemark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=VARCHAR},
      update_user_id = #{updateUserId,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=VARCHAR}
  </update>
</mapper>
